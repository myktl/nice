<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:mybatis/db.properties"/>
    <!--加载数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--&lt;!&ndash;加载mybatis配置文件&ndash;&gt;
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>-->
        <!--DI  依赖注入  如果依赖注入的是一个实例化对象的话，需要使用ref-->
        <property name="dataSource" ref="dataSource"/>
        <!--给实体起别名-->
        <property name="typeAliasesPackage" value="com.xcy.entry"/>
    </bean>
    <!--扫描该文件夹下的配置文件，并创建动态代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xcy.mapper"/>
    </bean>

</beans>
